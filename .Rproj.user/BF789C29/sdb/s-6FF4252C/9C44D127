{
    "contents" : "#' Reads the necessary data and defines variables used in later functions\n#' @examples\n#' read_data()\n#' @export\nanalyse_data <- function( profs_data ) {\n\n  data_of_profs <- profs_data\n\n  ages <- 2014 - data_of_profs$year_of_BA + 22\n  data_of_profs <- cbind(data_of_profs, ages)\n\n  assign(\"data_of_profs\", data_of_profs, envir = .GlobalEnv)\n\n  mean_age <- mean(ages)\n  deviation <- sd(ages)\n\n  assign(\"mean_age\", mean_age, envir = .GlobalEnv)\n  assign(\"deviation\", deviation, envir = .GlobalEnv)\n\n  cat(\"Mean = \", mean_age, \"\\n\")\n  cat(\"Standard Deviation = \", deviation, \"\\n\")\n\n\n  assign(\"dep_label\", c(\"AFR\", \"AMST\", \"ANTH\", \"ARAB\", \"ARTS\", \"ARTH\", \"ASTR\", \"BIOL\", \"CHEM\", \"CHIN\",\n                 \"CLAS\", \"COMP\", \"CSCI\", \"DANC\", \"ECON\", \"ENGL\", \"ENVI\", \"GEOS\", \"GERM\", \"HIST\",\n                 \"JAPN\", \"LATS\", \"LEAD\", \"MAST\", \"MATH\", \"MUS\", \"PHIL\", \"PHED\", \"PHYS\", \"PSCI\",\n                 \"PSYC\", \"REL\", \"RL\", \"RUSS\", \"SOC\", \"STAT\", \"THEA\", \"WGSS\"), envir = .GlobalEnv )\n\n  assign(\"div_label\", c(\"Div. I\", \"Div. II\", \"Div. III\", \"PE\"), envir = .GlobalEnv )\n}\n\n#' Prints out a table of all professors, ordered by age\n#' @examples\n#' read_data()\n#' get_table()\n#' @export\nget_table <- function(){\n\n  year_order <- order( data_of_profs$year_of_BA )\n  top_five <- year_order[1:5]\n  bottom_five <- year_order[387:391]\n\n  assign(\"table_top\", data_of_profs[top_five, c(2,4,3,7)], envir = .GlobalEnv)\n  assign(\"table_bottom\", data_of_profs[bottom_five, c(2,4,3,7)], envir = .GlobalEnv)\n\n}\n\n#' Prints the mean age in each division\n#' @examples\n#' library(ggplot2)\n#' read_data()\n#' get_mean()\n#' @export\nget_mean <- function() {\n\n  div1_profs <- data_of_profs[data_of_profs$division == \" 1\",]\n  div2_profs <- data_of_profs[data_of_profs$division == \" 2\",]\n  div3_profs <- data_of_profs[data_of_profs$division == \" 3\",]\n  pe_profs <- data_of_profs[data_of_profs$division == \" PE\",]\n\n  div1_mean <- mean( div1_profs$ages )\n  assign(\"div1_mean\", div1_mean, envir = .GlobalEnv)\n  cat(\"Div.I Mean = \", div1_mean, \"\\n\")\n\n  div2_mean <- mean( div2_profs$ages )\n  assign(\"div2_mean\", div2_mean, envir = .GlobalEnv)\n  cat(\"Div.II Mean = \", div2_mean, \"\\n\")\n\n  div3_mean <- mean( div3_profs$ages )\n  assign(\"div3_mean\", div3_mean, envir = .GlobalEnv)\n  cat(\"Div.III Mean = \", div3_mean, \"\\n\")\n\n  pe_mean <- mean( pe_profs$ages )\n  assign(\"pe_mean\", pe_mean, envir = .GlobalEnv)\n  cat(\"PE Mean = \", pe_mean, \"\\n\")\n\n}\n\n#' Prints a histogram with the divisions that the professors belong to\n#' @examples\n#' library(ggplot2)\n#' read_data()\n#' get_plot1()\n#' @export\nget_plot1 <- function(){\n\n  ggplot(data_of_profs, aes( ages ) ) + geom_histogram(\n    binwidth = 1, aes( fill = division ) ) + scale_fill_discrete(labels= div_label)\n}\n\n#' Prints a graph showing age distributions in each department\n#' @examples\n#' library(ggplot2)\n#' read_data()\n#' get_plot2()\n#' @export\nget_plot2 <- function(){\n  ggplot(data_of_profs, aes(department, ages)) + geom_boxplot( aes( fill = division ) ) + scale_x_discrete(\n    labels= dep_label) + theme( axis.text.x = element_text(angle=90, vjust=1))\n}\n\n#' Prints a scatter plot of ages and the year the professor received the last degree\n#' @examples\n#' library(ggplot2)\n#' read_data()\n#' get_plot3()\n#' @export\nget_plot3 <- function(){\n  ggplot(data_of_profs, aes( last_degree, ages )) + geom_point( aes( color = division ) ) + geom_smooth(\n    aes( color= division )) + geom_abline(slope= -1, intercept= 2036 )\n}\n",
    "created" : 1454275067374.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2465885270",
    "id" : "9C44D127",
    "lastKnownWriteTime" : 1454474169,
    "path" : "~/R/hutchinhillproject/R/main.R",
    "project_path" : "R/main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}